# The drone config
kind: pipeline
type: kubernetes
name: default

# define the k8s name space
metadata:
  namespace: drones
  labels:
    app: drones-test-app

# config pipeline
steps:
  # The step 1: build application
  - name: build program
    image: golang:1.15
    volumes:
      - name: go-cache
        path: /go/pkg
    environment:
      GOCACHE: /go/pkg/.cache/go-build/edge-backend
      GOPROXY: https://goproxy.io
      GO111MODULE: on
    commands:
      - go test ./...
      - make drone-build
      - ./dist/app -v

volumes:
  - name: go-cache
    host:
      path: /daocloud/drone/cache/go-cache
  - name: docker-cache
    host:
      path: /daocloud/drone/cache/docker-cache

---
# For docker runner to build docker image

# The drone config
kind: pipeline
type: docker
name: build images

steps:
  # build the application to ./dist/app
  - name: build app
    image: golang:1.15
    volumes:
      - name: go-cache
        path: /go/pkg
    environment:
      GOCACHE: /go/pkg/.cache/go-build/edge-backend
      GOPROXY: https://goproxy.io
      GO111MODULE: on
    commands:
      - make drone-build

  # for private harbor
  - name: for harbor - private
    image: plugins/docker
    pull: if-not-exists
    volumes:
      - name: docker-cache
        path: /var/lib/docker
      - name: dockersock
        path: /var/run/docker.sock
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_secret
      dockerfile: Dockerfile.drone
      repo:
        from_secret: private_harbor_project_name
      registry:
        from_secret: private_harbor_host
      tags:
        drone-build-${DRONE_BUILD_NUMBER}

  # for daocloud harbor
  - name: for harbor - dao cloud
    image: plugins/docker
    pull: if-not-exists
    volumes:
      - name: docker-cache
        path: /var/lib/docker
      - name: dockersock
        path: /var/run/docker.sock
    settings:
      username:
        from_secret: daocloud_harbor_name
      password:
        from_secret: daocloud_harbor_secret
      dockerfile: Dockerfile.drone
      repo: harbor.daocloud.cn/xudong.meng/common-test
      registry: harbor.daocloud.cn
      tags:
        drone-build-${DRONE_BUILD_NUMBER}

trigger:
  branch:
    - master

volumes:
  - name: go-cache
    host:
      path: /daocloud/drone/cache/go-cache
  - name: docker-cache
    host:
      path: /daocloud/drone/cache/docker-cache
  - name: dockersock
    host:
      path: /var/run/docker.sock
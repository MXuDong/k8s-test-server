# The server params.
server:
  # The port of application listen, default is 3000.
  port: ":3000"
  # The application mode, choose one of [debug, release, test].
  mode: "debug"
  # The log file path of application, if the file not exist, it will create, else, will append log to log file.
  log_path: "log.log"
  # The application name when program run
  app_name: "test for kubernetes"
# The common params.
common:
  # If is true, will load common http handle, the request path follow RESTFul. And all the common http handle will response simple value.
  enable_common_http: true
  # If is true, will load cache http handle, cache handle will cache request value, and all the request path follow RESTFul.
  enable_cache_http: true
# The kubernetes params
k8s:
  # If is true, application will try to load kubernetes config, if can't load, it value will set to false, and application will start too.
  enable_kubernetes_feature: false
  # If is true, the application will see as a pod in the kubernetes.
  is_in_kubernetes: false
  # The config path of kubernetes, if not use, remove it for auto search kubernetes config file.
  kubernetes_config_path: "$home/.kube/conf"
mesh:
  # If is true, application will use service mesh feature.
  enable_service_mesh: false
  server_hosts:
  # format is : methods|mode|name|host
  # please remove all the space, methods support GET POST PUT PATCH DELETE, if want more than one, use ',' split(without space)
  # the model support : directly host-replace, directly will do request to target host, and without replace any url
  #   host-replace will add path value to host
  # name is the path of server route
  # host is base request url
#    - "|host-replace|test1|http://127.0.0.1:3000"